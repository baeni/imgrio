@using System.Security.Claims;

<nav class="navbar navbar-expand-md navbar-light mb-4 sticky-top">
    <div class="container">
        <a class="navbar-brand" href="">imgrio</a>
        <button class="navbar-toggler @NavButtonCssClass" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse"
                aria-controls="navbarCollapse" aria-label="Toggle navigation" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse @NavBarCssClass text-center" id="navbarCollapse">
            <!--Navigation section-->
            <ul class="navbar-nav mx-auto">
                <li class="nav-item">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        Home
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="/f/upload" Match="NavLinkMatch.Prefix">
                        Datei hochladen
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="/sharex" Match="NavLinkMatch.Prefix">
                        ShareX
                    </NavLink>
                </li>
            </ul>

            <!--User section-->
            <ul class="navbar-nav">
                @if (AuthUser.Identity.IsAuthenticated)
                {
                    <div class="dropdown" @onmouseenter="ShowDropdown" @onmouseleave="HideDropdown">
                        <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                            @AuthUser.Identity.Name
                        </button>
                        <ul class="dropdown-menu @DropdownCssClass my-0" aria-labelledby="about-us" x-placement="bottom-start">
                            <li><a class="dropdown-item" href="/u/files">Meine Dateien</a></li>
                            <li><a class="dropdown-item" href="/u/account">Mein Account</a></li>
                            <li><a class="dropdown-item text-danger" href="/u/sign-out">Abmelden</a></li>
                        </ul>
                    </div>
                }
                else
                {
                    <a class="btn btn-primary" href="/u/sign-in">
                        Anmelden
                    </a>
                }
            </ul>
        </div>
    </div>
</nav>

@code {
    [Inject]
    public AuthenticationStateProvider AuthenticationStateProvider { get; set; } = null!;

    private bool collapseNavMenu = true;
    private string? NavBarCssClass => collapseNavMenu ? null : "show";
    private string? NavButtonCssClass => collapseNavMenu ? "collapsed" : null;

    private bool collapseDropdown = true;
    private string? DropdownCssClass => collapseDropdown ? null : "show";

    private ClaimsPrincipal AuthUser { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        AuthUser = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void ShowDropdown()
    {
        collapseDropdown = false;
    }

    private void HideDropdown()
    {
        collapseDropdown = true;
    }
}
@page "/u/sign-in"
@using Imgrio.Blazor.Backend.Services;
@using Firebase.Auth;
@using System.Web;
@using System.Security.Claims;

<PageTitle>Anmelden</PageTitle>

<h1>Anmelden</h1>

<form class="w-50">
    <div class="mb-4">
        <input class="form-control" type="email" placeholder="Email Adresse" aria-describedby="emailHelp" @bind="Email" />
        <small id="emailHelp" class="form-text text-muted">Wir teilen deine Email Adresse niemals mit Dritten.</small>
    </div>

    <div class="mb-4">
        <input class="form-control" type="password" placeholder="Passwort" @bind="Password" />
    </div>

    <div class="mb-4">
        <a @onclick="SendForgotPasswordMail" href="javascript:;">Passwort vergessen?</a>
    </div>

    @if (Alert != null)
    {
        <div class="alert alert-danger" role="alert">
            @Alert
        </div>
    }

    <a class="btn btn-primary" href="/u/sign-in-redirect?email=@HttpUtility.UrlEncode(Email)&password=@HttpUtility.UrlEncode(Password)">Anmelden</a>
</form>

@code {
    [Inject]
    public AuthenticationStateProvider AuthenticationStateProvider { get; set; } = null!;

    [Inject]
    public NavigationManager NavigationManager { get; set; } = null!;

    [Inject]
    public FirebaseAuthHandler FirebaseAuthHandler { get; set; } = null!;

    private ClaimsPrincipal AuthUser { get; set; } = null!;

    private string Alert { get; set; } = null!;

    private string Email { get; set; } = null!;
    private string Password { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        AuthUser = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User;

        if (AuthUser.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/u/files");
        }
    }

    private async Task SendForgotPasswordMail()
    {
        if (string.IsNullOrEmpty(Email))
        {
            Alert = "Bitte gib deine Email Adresse an, damit wir dir einen Link zum Zurücksetzen deines Passworts senden können.";
            return;
        }

        try
        {
            await FirebaseAuthHandler.FirebaseAuthProvider.SendPasswordResetEmailAsync(Email);
            Alert = "Wir haben dir einen Link zum Zurücksetzen deines Passworts gesendet.";
        }
        catch (HttpRequestException)
        {
            Alert = $"Uns ist kein Account mit dieser der Email Adresse {Email} bekannt.";
        }
    }
}

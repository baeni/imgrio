@page "/u/files"
@using Firebase.Auth;
@using Imgrio.Blazor.Backend.Models;
@using Imgrio.Blazor.Backend.Services;
@using System.Security.Claims;
@using Imgrio.Blazor.Backend.Utils;
@attribute [Authorize]

<h1>Meine Dateien</h1>

<div class="table-responsive">
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th scope="col">Titel</th>
                <th scope="col">Dateityp</th>
                <th scope="col">Dateigröße</th>
                <th scope="col">Hochgeladen am</th>
                <th scope="col">Aktionen</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var userFile in UserFiles)
            {
                <tr>
                    <td>@userFile.Title</td>
                    <td>@userFile.Extension.ToUpper()</td>
                    <td>@userFile.ToFormattedSizeString()</td>
                    <td>@userFile.UploadedAt.ToString("dd.MM.yyyy")</td>
                    <td>
                        <a class="btn btn-sm btn-outline-primary" href="/f/@userFile.Id">Ansehen</a>
                        <button class="btn btn-sm btn-outline-danger">Löschen</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    [Inject]
    public AuthenticationStateProvider AuthenticationStateProvider { get; set; } = null!;

    [Inject]
    public UserFileService UserFileService { get; set; } = null!;

    private ClaimsPrincipal AuthUser { get; set; } = null!;

    private UserFile[] UserFiles { get; set; } = new UserFile[] { };

    protected override async Task OnInitializedAsync()
    {
        var AuthState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        AuthUser = AuthState.User;

        UserFiles = (await UserFileService.GetUserFiles()).Where(userFile => userFile.UploadedBy == AuthUser.FindFirstValue(ClaimTypes.NameIdentifier)).ToArray();
    }
}
@page "/f/{id:guid}"
@using Imgrio.Blazor.Backend.Interfaces;
@using Imgrio.Blazor.Backend.Models;
@using Imgrio.Blazor.Backend.Services;
@using Imgrio.Blazor.Backend.Utils;
@using Google.Cloud.Firestore.V1;
@using Google.Cloud.Firestore;

@if (UserFile == null)
{
    <p class="text-muted">Ich habe überall gesucht, aber die angeforderte Datei ist mir dabei nicht zu begegnet...</p>
}
else
{
    @if (UserFile.Extension == "png" || UserFile.Extension == "jpg" || UserFile.Extension == "jpeg")
    {
        <HeadContent>
            <meta property="og:image" content="https://imgrio.azurewebsites.net/@Path.Combine("data", $"{UserFile.Id}.{UserFile.Extension}")">
            <meta name="twitter:image:src" content="https://imgrio.azurewebsites.net/@Path.Combine("data", $"{UserFile.Id}.{UserFile.Extension}")">
            <meta name="twitter:card" content="summary_large_image">
        </HeadContent>
    }
    else
    {
        <HeadContent>
            <meta name="title" content="@UserFile.Extension" />
            <meta property="og:title" content="@UserFile.Extension" />
            <meta name="twitter:title" content="@UserFile.Extension" />

            <meta name="description" content="@fancyUploadedAt">
            <meta property="og:description" content="@fancyUploadedAt" />
            <meta name="twitter:description" content="@fancyUploadedAt" />
        </HeadContent>
    }

    <PageTitle>Datei ansehen</PageTitle>

    <div class="text-center">
        <h1>@UserFile.Title</h1>

        @if (UserFile.Extension == "png" || UserFile.Extension == "jpg" || UserFile.Extension == "jpeg")
        {
            <img class="mw-100 max-vh-85 rounded shadow-lg mb-4" src="@UserFile.FileUrl" style="object-fit: cover;" />
        }

        <div class="row justify-content-center">
            <p class="col-auto fs-5 text-muted">@fancyFileType</p>
            <p class="col-auto fs-5 text-muted">@fancyFileSize</p>
            <p class="col-auto fs-5 text-muted">@fancyUploadedAt</p>
        </div>

        <a class="btn btn-primary" href="@UserFile.FileUrl" download>Herunterladen</a>
    </div>
}

@code {
    [Inject]
    public UserFileService UserFileService { get; set; } = null!;

    [Parameter]
    public Guid Id { get; set; }

    private string fancyFileType = null!;
    private string fancyFileSize = null!;
    private string fancyUploadedAt = null!;

    private UserFile UserFile { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        UserFile = (await UserFileService.GetUserFiles()).First(userFile => userFile.Id == Id);

        fancyFileType = $"Dateityp: {UserFile.Extension.ToUpper()}";
        fancyFileSize = $"Dateigröße: {UserFile.ToFormattedSizeString()}";
        fancyUploadedAt = $"Hochgeladen am: {UserFile.UploadedAt.ToString("dd.MM.yyyy")}";

    }
}
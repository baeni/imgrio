@using System.Security.Claims;

<nav class="navbar navbar-expand-md navbar-light mb-4 sticky-top">
    <div class="container">
        <a class="navbar-brand" href="">Fordele</a>
        <button class="navbar-toggler @NavButtonCssClass" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse"
                aria-controls="navbarCollapse" aria-label="Toggle navigation" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse @NavBarCssClass" id="navbarCollapse" @onclick="ToggleNavMenu">
            <!--Navigation section-->
            <ul class="navbar-nav me-auto">
                <AuthorizeView>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/v/images">
                            Bilder
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/v/documents">
                            Dokumente
                        </NavLink>
                    </li>
                </AuthorizeView>
            </ul>

            <!--User section-->
            <ul class="navbar-nav align-items-center">
                @if (AuthUser.Identity.IsAuthenticated)
                {
                    <li class="nav-item text-muted">
                        Hej, @AuthUser.Identity.Name!
                    </li>

                    <li class="nav-item">
                        <a class="btn btn-secondary text-light" href="/u/sign-out">Abmelden</a>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <a class="btn btn-secondary text-light" href="/u/sign-in">Anmelden</a>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>

@code {
    private bool collapseNavMenu = true;
    private string? NavBarCssClass => collapseNavMenu ? null : "show";
    private string? NavButtonCssClass => collapseNavMenu ? "collapsed" : null;

    [Inject]
    public AuthenticationStateProvider AuthenticationStateProvider { get; set; } = null!;

    public ClaimsPrincipal AuthUser { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        var AuthState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        AuthUser = AuthState.User;

        await base.OnInitializedAsync();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
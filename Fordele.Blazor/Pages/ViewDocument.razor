@page "/d/{id:guid}"
@using Fordele.Blazor.Backend.Interfaces;
@using Fordele.Blazor.Backend.Models;
@using Fordele.Blazor.Backend.Services;
@using Fordele.Blazor.Backend.Utils;

@if (UploadedDocument == null) { <NotFound/> }
else
{
    <HeadContent>
        <meta name="title" content="@UploadedDocument.Extension" />
        <meta property="og:title" content="@UploadedDocument.Extension" />
        <meta name="twitter:title" content="@UploadedDocument.Extension" />

        <meta name="description" content="@UploadedDocument.ToFancyCreatedString()">
        <meta property="og:description" content="@UploadedDocument.ToFancyCreatedString()" />
        <meta name="twitter:description" content="@UploadedDocument.ToFancyCreatedString()" />
    </HeadContent>

    <PageTitle>Dokument</PageTitle>

    <div class="text-center">
        @if (UploadedDocument.Extension == "txt")
        {
            <p>@File.ReadAllText(Path.Combine(UploadedFileService.DataPath, "documents", $"{UploadedDocument.Id.ToString()}.{UploadedDocument.Extension}"))</p>
        }

        <p class="fs-5 text-muted">@UploadedDocument.ToFormattedSizeString()</p>

        <a class="btn btn-primary" href="@Path.Combine("data", "documents", $"{UploadedDocument.Id.ToString()}.{UploadedDocument.Extension}")" download>Herunterladen</a>
    </div>
}

@code {
    [Inject]
    public UploadedFileService UploadedFileService { get; set; } = null!;

    [Parameter]
    public Guid Id { get; set; }

    private UploadedDocument? UploadedDocument { get; set; } = null!;

    protected override void OnInitialized()
    {
        UploadedDocument = UploadedFileService.GetUploadedDocuments().FirstOrDefault(x => x.Id == Id);

        base.OnInitialized();
    }
}
